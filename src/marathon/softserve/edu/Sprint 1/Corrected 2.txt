// 2 Caffee



import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

interface DrinkPreparation {
	Map<String, Integer> makeDrink();
}

interface DrinkReceipt {
	String getName();

	DrinkReceipt addComponent(String componentName, int componentCount);
}

interface Rating {
	int getRating();
}

class Espresso extends Caffee {

	public Espresso(String name, int rating) {
		super(name, rating);
	}

	@Override
	public Map<String, Integer> makeDrink() {
		super.makeDrink();
		addComponent("Water", 50);
		return getIngredients();
	}
}

class Cappuccino extends Caffee {

	public Cappuccino(String name, int rating) {
		super(name, rating);
	}

	@Override
	public Map<String, Integer> makeDrink() {
		super.makeDrink();
		addComponent("Milk", 50);
		return getIngredients();
	}
}

public class Caffee implements DrinkReceipt, DrinkPreparation, Rating {

	private String name;
	private int rating;
	private Map<String, Integer> ingredients;

	public Caffee(String name, int rating) {
		this.name = name;
		this.rating = rating;
		ingredients = new HashMap<>();
	}

	public String getName() {
		return name;
	}

	public int getRating() {
		return rating;
	}

	public Map<String, Integer> getIngredients() {
		return ingredients;
	}

	public DrinkReceipt addComponent(String componentName, int componentCount) {
		ingredients.put(componentName, componentCount);
		return this;
	}

	public Map<String, Integer> makeDrink() {
		ingredients.clear();
		addComponent("Water", 100).addComponent("Arabica", 20);
		return ingredients;
	}
	
	
	@Override
	public String toString() {
		return this.getClass().getSimpleName() + "[name=" + name + ", rating=" + rating + "]";
	}

	public static void main(String[] args) {
		List<Caffee> originCaffee = new ArrayList<>();
		originCaffee.add(new Espresso("Espresso", 8));
		originCaffee.add(new Cappuccino("Cappuccino", 10));
		originCaffee.add(new Espresso("Espresso", 10));
		originCaffee.add(new Cappuccino("Cappuccino", 6));
		originCaffee.add(new Caffee("Caffee", 6));
		
		System.out.println(originCaffee);
		
		MyUtils my = new MyUtils();
		System.out.println(my.averageRating(originCaffee));
	}

}

class MyUtils {
	public Map<String, Double> averageRating(List<Caffee> coffees) {
		Map<String, List<Integer>> groupByName = new HashMap<>();
		if (coffees == null) {
			return null;
		}
		for (Caffee caffee : coffees) {
			String key = caffee != null ? caffee.getName() : null;
			List<Integer> list = groupByName.get(key);
			if (list == null) {
				list = new ArrayList<>();
			}
			if (caffee != null) {
				list.add(caffee.getRating());
			}
			groupByName.put(key, list);
		}
		Map<String, Double> average = new HashMap<>();
		for (Map.Entry<String, List<Integer>> entry : groupByName.entrySet()) {
			double sum = 0;
			for (int rate : entry.getValue()) {
				sum = sum + rate;
			}
			average.put(entry.getKey(), entry.getValue().size() != 0 ? sum / entry.getValue().size() : 0);
		}
		return average;

	}

}